{% extends "base-hero.njk" %}
{% import "partials/feature-card.njk" as featureComponents %}

{% block hero %}
  <h1 variant="xxl" top="4" bottom="2" id="heading-primary">Features</h1>
  <p variant="lg" id="subheading" top="4">A collection of the latest in CSS and Web Components</p>
{% endblock %}

{% block page_content %}

  <flex-items 
        start="4" 
        end="-4"
        id="navigation-bar"
        >

    <nav class="navigation-bar" id="navigation-bar">
      <a variant="button" href="?filter=browser-api">
        <b>Browser API</b>
      </a>
      <a variant="button" href="?filter=css">
        <b>CSS</b>
      </a>
      <a variant="button" href="?filter=cssom">
        <b>CSSOM</b>
      </a>
      <a variant="button" href="/features">
        <b>All</b>
      </a>
    </nav>
    <flex-item
      aria-label="Order features"
      id="order-selector" 
    >
      <form class="order" method="GET" action="">
        <label for="order">
          <span>Order:</span></label>
        <select class="custom-select" id="order" name="order" onchange="this.form.action = updateQueryString(this); this.form.submit();">
          <option value="">
            <span>All</span></option>
          <option value="asc">Ascending</option>
          <option value="desc">Descending</option>
        </select>
      </form>
    </flex-item>
  </flex-items>
  <grid-auto>
    {% for feature in features %}
      {{ featureComponents.featureCard(feature) }}
    {% endfor %}
  </grid-auto>
{% endblock %}

<script>
  function updateQueryString(selectElement) {
    console.log("Updating query string for:", selectElement.name, "with value:", selectElement.value);
    const url = new URL(window.location.href);
    const params = new URLSearchParams(url.search);

    // Update or add the selected value to the query string
    if (selectElement.value) {
      params.set(selectElement.name, selectElement.value);
    } else {
      params.delete(selectElement.name);
    }

    // Return the updated query string
    return `${url
      .pathname}?${params
      .toString()}`;
  }
</script>
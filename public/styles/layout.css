/* prettier-ignore */
@function --get-type(--variant <custom-ident>) returns <color> {
    result: if(
      style(--variant: button): var(--dark-scheme);
      
      else: transparent
    )
  }

app-shell {
  background-color: var(--site-background);
  background-image: paint(grid);
  display: grid;
  grid-template-columns: --grid(12);
  grid-template-rows: --grid-row-base(5rem, 10rem);
  min-height: 100dvh;
}

grid-auto {
  --start: attr(start type(<integer> | <custom-ident>), 2);
  --end: attr(end type(<integer> | <custom-ident>), -2);

  /* column-gap: --responsive(0rem, 3rem, 5rem); */
  column-gap: 2rem;
  display: grid;
  grid-column: var(--start) / var(--end);
  row-gap: 8rem;
  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));

  /* @apply --box; */
}

main-content {
  align-items: start;
  display: grid;
  grid-auto-rows: min-content;
  grid-column: full;
  grid-row: main;
  grid-template-columns: subgrid;
  row-gap: attr(row-gap rem, 5rem);
}

/* prettier-ignore */
layout-item {
  --variant: attr(variant type(<custom-ident>), row);
  --grid: if(
    style(--variant: column): 1fr; 
    style(--variant: row): subgrid; 
    
    else: auto
  );

  align-content: attr(align type(<custom-ident>), normal);
  display: grid;
  grid-column: attr(start type(<integer>)) / attr(end type(<integer>));
  grid-row: attr(row type(<integer>), auto);
  grid-template-columns: var(--grid);
  row-gap: attr(row-gap rem, unset);
}

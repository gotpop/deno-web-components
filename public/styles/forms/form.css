form {
  display: grid;
  gap: 1rem;
  justify-items: start;
}

label {
  display: flex;
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-bold);
  gap: 1rem;
  padding-block-start: calc(1rem - 1cap);
}

textarea {
  resize: vertical;
  display: block;
  padding: 1rem;
  field-sizing: content;
  outline-offset: 0.5rem;
  margin-block-end: 2rem;
  width: 100%;
  min-height: 3rem;
  border-radius: unset;
  height: calc-size(max-content, round(up, size, 1rem));

  --w: calc(100% - 1rem);
  --grad: linear-gradient(
    to right,
    var(--light-700) var(--w),
    var(--color) var(--w)
  );

  background-color: --opacity(var(--light-100), 0.5);
  border-image: var(--grad) 16;
  color: var(--dark-500);
  font-size: var(--font-scaled-base);
  font-family: var(--font-family-base);
  border-width: 2px;
  border: 2px solid var(--dark-500);

  &:valid {
    border-right: green solid 1rem;
  }

  &:user-invalid {
    border-right: red solid 1rem;
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--primary-300);
  }
}

button:not([class]) {
  align-items: center;
  background-color: var(--primary-300);
  border: none;
  color: var(--light-100);
  cursor: pointer;
  display: inline-flex;
  font-size: var(--font-scaled-base);
  font-weight: var(--font-weight-medium);
  gap: var(--spacing-base);
  justify-content: space-between;
  justify-self: end;
  padding: calc(calc(round(up, 1cap, 3rem) - 1cap) / 2) 2rem;
  transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
  width: calc-size(min-content, round(up, size, 1rem));

  form:has(:invalid) & {
    background-color: var(--dark-500);
    cursor: not-allowed;
    color: var(--light-300);
  }
}

.custom-select {
  background: var(--secondary-200);
  color: white;
  border-radius: 0;
  border: none;
  width: calc-size(min-content, round(up, size, 1rem));
  height: calc-size(max-content, round(up, size, 1rem));
  line-height: 1.5;
  font-weight: 700;
  cursor: pointer;
  transition: background-color 0.3s ease-in-out;

  &:hover {
    background-color: var(--secondary-300);
  }

  :has(~ &) & {
    background-color: red;
  }

  option {
    line-height: 3rem;
    height: 3rem;
    border: none;
  }

  &::picker(select) {
    border: none;
    right: anchor(right);
  }

  &::picker-icon {
    color: #999;
    transition: 0.4s rotate;
  }

  &:open::picker-icon {
    rotate: 180deg;
  }

  span {
    background-color: yellow;
  }
}

select,
::picker(select) {
  appearance: base-select;
}

form.order {
  display: flex;
  gap: 1rem;
  justify-content: space-between;
}

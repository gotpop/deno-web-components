/* prettier-ignore */
@function --get-scheme(--variant <custom-ident>) returns <color> {
    result: if(
      style(--variant: dark): var(--dark-scheme);
      style(--variant: light): var(--light-scheme);
      
      else: transparent
    )
  }

/* prettier-ignore */
@function --get-scheme(--variant <custom-ident>) returns <color> {
    result: if(
      style(--variant: dark): var(--dark-scheme);
      style(--variant: light): var(--light-scheme);
      
      else: transparent
    )
  }

/* prettier-ignore */
@function --get-padding-size(--size-attr <custom-ident>) returns <length> {
    result: if(
      style(--size-attr: large): 3rem;
      style(--size-attr: medium): 2rem;
      style(--size-attr: small): 1rem;
      
      else: 0rem 
    )
  }

.sticky {
  position: sticky;
  top: var(--site-header-height);
  height: max-content;
}

nav {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-base);
}

surface-item {
  --dark-scheme: --transparent(var(--secondary-400), var(--opacity));
  --end: attr(end type(<integer> | <custom-ident>), -1);
  --light-scheme: --transparent(var(--light-100), var(--opacity));
  --opacity: attr(opacity type(<number>), 0.4);
  --start: attr(start type(<integer> | <custom-ident>), 1);

  align-content: attr(align type(<custom-ident>), space-between);
  align-self: attr(align-self type(<custom-ident>), auto);
  background-color: --get-scheme(attr(variant type(<custom-ident>), light));
  display: grid;
  grid-column: var(--start) / var(--end);
  grid-row: attr(row type(<integer>));
  grid-template-columns: auto;
  padding: --get-padding-size(attr(size type(<custom-ident>), 1rem));
  view-transition-name: attr(id type(<custom-ident>), none);
}
